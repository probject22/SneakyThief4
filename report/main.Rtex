%\documentclass[a4paper]{article}
\documentclass{ba-kecs}
\usepackage{tikz}
\usepackage[toc,page]{appendix}
\usepackage[ruled,linesnumbered,vlined]{algorithm2e}
\usepackage{graphicx}

\title{Sneaky Thief}
\author{S. Kerstjens, ing. R.J.H.M Stevens, S. Maghami Nick, R.M. Clinch, S.D.F.R. Hallmanns}
\date{\today}

\begin{document}
\maketitle
\section{Summary}
% Short summary
\section{Introduction}
\label{sec:intro}
% Problem Description
The posed problem is as follows. There is a world with two kinds of agents; guards and intruders. The guards have no greater goal than to catch the intruders and the intruders have no larger purpose than to get to the valuables that they wish to acquire. The guards and intruders live on discrete tiles on a two dimensional game board among walls, doors, windows, and each other. This paper shall discuss the various tasks both the guards and the intruders need to perform and the appropriate algorithms to reach their respective goals.

% Paper overview

	From the guards' perspective, the problem can be divided into three tasks. The initial task is that guards that are put into an unknown environment should be able to create a 'mental map' of the environment. This is called the exploration task. The second task is monitoring the entire area as closely as possible to make it as difficult as possible for a intruder to pass through the area unseen. This is called the coverage task. The third task is the pursuit action or in other words, cooperation with other guards to surround the intruder. The challenge arising from these three tasks is the decision to when to switch between them. For instance, an intuitive strategy would be to explore until the entire environment is known and then switch the task to covering the area. In this strategy the guards switches to the pursuit task at any moment that the intruder is detected. 
	
	From the intruder's perspective, one main task is encountered. The task of a intruder is to find it's path towards the target while dodging and avoiding the guards along the path.
	
	For every action, the guard or the intruder should figure out two things, namely where it should go and how it gets there. The 'where'-question is largely dependent on the specific task at hand. The 'how'-question, on the other hand, is in many cases independent of the exact task that needs to be achieved and therefore finding the shortest route to the destination does usually suffice and is often even the best route. The 'how'-question is referred to as the path finding problem.

	The rest of this paper is organised as follows. Section~\ref{sec:simulator} provides the knowledge of the simulated world and its rules. Sections~\ref{sec:pathfinding},~\ref{sec:patrolling},~\ref{sec:pursuit}~and~\ref{sec:avoidance} will cover the implemented algorithms of path finding, coverage, pursuit and avoidance respectively.The experiments and results are presented in section~\ref{sec:experiments}. Section~\ref{sec:discussion} poses discussion points from the results of this research. Finally, the conclusion is given in section~\ref{sec:conclusion}
	
		\section{Simulator environment}
		\label{sec:simulator}
As with every simulation, this program runs in a simplified world. The specifics will be explained in the following sections. First the general game rules will be summarised. Then it will be explained how time is perceived and lastly the way maps are generated will be clarified.

\subsection{Game rules}
		\input{gameRules.tex}
		
		\subsection{Time perception}
			The time in the simulator is perceived continuously to allow for continuous velocity, even in a discretized world. Although the moves of the agents on the map are fully discretized, the simulator takes into account how long this unit's move has taken to perform and only allows the same agent to move again once all other agents have caught up with his 'time'. In other words, each agent has his own progress in time and is only allowed to move when his time is lower (or equal) than all the other agents' times.
		\subsection{State Machines}
        \input{states.tex}
        \subsection{Map Generator}
        \input{mapgenerator.tex}


	
\section{Path finding}
\label{sec:pathfinding}
		As already mentioned in the introduction, the answer to the question on what path to take to a certain location is in many cases not important as long as the the shortest path is found. This is why the general methods of path finding will be discussed, without referring to what goal the agents' movement serves. There are also cases where the shortest path is not the best path. This is heavily dependent on the task and will therefore be discussed in the sections dealing with those specific tasks.

    \subsection{A-star}
    \label{sec:astar}
		\input{astar.tex}
    
    \subsection{ARob}
    \label{sec:ARob}
		\input{ARob.tex}
		
	
	\subsection{RTTE-h}
		\input{rtteh.tex}

\section{Exploration}
\label{sec:exploration}
	\input{exploration.tex}

	\section{Patrolling}
	\label{sec:patrolling}
	Any intruder will try to be undetected. In order to increase the chance of detecting an intruder it is important to make sure that the environment is monitored as closely as possible. This is the problem of coverage. Given the environment, the agents should move in such a way that no intruder can move through the environment undetected. The intuitive answer behind this problem is to try to disperse the guards over the environment as well as possible, which is exactly what the StiCo algorithm aims to do. 
	
		\subsection{StiCo}
			\input{stico.tex}

	\section{Pursuit}
	\label{sec:pursuit}
		When considering the problem of pursuit, there is again a very simple intuitive answer, namely to go directly to the location of the intruder following the shortest path. This will often be the best solution if you are a lone guard pursuing an intruder. Yet even then, this strategy will only work if either the intruder is not actively avoiding the guard, or the guard is faster than the intruder. As none of these conditions can be assumed true, the program needs to act slightly more intelligently.

	    \subsection{MTES}
			\input{mtes.tex}

		\subsection{Blocking Escape Directions}
			\input{bes.tex}

\section{Avoidance}
    \label{sec:avoidance}
    The intruder should not only want to win himself; he should also try to prevent the guard from winning ie. himself from losing. This means he should try to avoid running into the guards. The following sections will explain two ways to let the intruder do this.
    \subsection{Prey A*}
    \input{prey-astar.tex}
    \subsection{Sneakescape}
	\label{sec:sneakescape}
	\input{sneakescape.tex}
	

\section{Experiments and results}
\label{sec:experiments}
\input{experiments.tex}
	% This chapter should contain all experimental results that we obtain (lots of graphs!)
	
\section{Discussion}
\label{sec:discussion}

\section{Conclusions}
\label{sec:conclusion}
	% This chapter should contain all our conclusions of how the experimental results compare to our initial expectations.
	% Also it should contain our evaluation of the different approaches we took towards the problems

\newpage
\bibliography{references}

\newpage
\begin{appendices}
\section{Other data}
	
\end{appendices}
\end{document}